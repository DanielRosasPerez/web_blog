"""
Django settings for webplayground project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'x6-jwk)wr($#5wqf4+03tem0=9(eu%88g^t$8kv44^_l#@bmf5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []
#ALLOWED_HOSTS = ['127.0.0.1', 'localhost'] # When DEBUG = False


# Application definition

INSTALLED_APPS = [
    'registration.apps.RegistrationConfig', # En este orden, djnago accede al contenido de las apps (templates, etc.). Para este caso especial,
    # dado que deseamos que "registration" muestre los templates que nosotros hemos modificado, debemos mantener este orden. De otra forma, Django
    # usara los templates de su carpeta "registration" que tiene por default. Estos estan en "djangoc.contrib.admin".
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'ckeditor',
    'core',
    'messenger.apps.MessengerConfig',
    'pages.apps.PagesConfig',
    'Profiles.apps.ProfilesConfig',
]

# Authentication Backends:
"""
AUTHENTICATION_BACKENDS = [ # Estos los declaré YO, no estaban por defaul. Verificar si son necesarios.
    'django.contrib.auth.backends.ModelBackend',
]
"""


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'webplayground.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'webplayground.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'es' # For english: "en-us"

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

# AUTHENTICATION REDIRECT:

#LOGIN_REDIRECT_URL = "app_pages:PageListView" # Actua como una especie de "reverse()" para "<server>/accounts/login/" una vez hemos iniciado sesión.
LOGOUT_REDIRECT_URL = "app_core:home" # Actua como una especie de "reverse()" para "<server>/accounts/logout/" una vez hemos cerrado sesión.

# PARA ENVIAR "EMAILS":
if DEBUG: # PARA ENVIAR EMAILS "SIN CONEXIÓN A INTERNET". Es decir, dichos correos se almacenarán en ficheros de prueba de manera local, por lo
    # que podremos consultarlos o recuperarlos directamente desde la terminal o los archivos:
    EMAIL_BACKEND = "django.core.mail.backends.filebased.EmailBackend" # Sobreescribimos esta variable para poder manejar los correos localmente.
    EMAIL_FILE_PATH = os.path.join(BASE_DIR, "sent_emails") # Declaramos la ruta en donde queremos que se guarden los correos.
    # Para Mayor información sobre la configuración del EMAIL_BACKEND: https://docs.djangoproject.com/en/3.1/topics/email/#email-backends

else: # PARA ENVIAR EMAILS VIA "SMPT SERVER". Es decir, aquí va el email real para producción:
    EMAIL_HOST = "smpt.gmail.com"
    EMAIL_HOST_USER = "daniel020197ss@gmail.com"
    EMAIL_HOST_PASSWORD = "guitarras5"
    EMAIL_PORT = 587
    EMAIL_USE_TLS = True # Enable the "Transport Layer Security."

    # NOTA: Por default DEBUG = True. Sin embargo, siempre que se despleguemos nuestro ya listo en un servidor de producción,
    # debemos hacer DEBUG = False.

# PARA LA MEDIA (FOTOS, VÍDEOS, ETC.):
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
